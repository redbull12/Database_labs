Server [localhost]:
Database [postgres]:
Port [5432]:
Username [postgres]:
Пароль пользователя postgres:
psql (17.6)
ПРЕДУПРЕЖДЕНИЕ: Кодовая страница консоли (866) отличается от основной
                страницы Windows (1251).
                8-битовые (русские) символы могут отображаться некорректно.
                Подробнее об этом смотрите документацию psql, раздел
                "Notes for Windows users".
Введите "help", чтобы получить справку.

postgres=# CREATE TABLE students (
postgres(# student_id INT PRIMARY KEY,
postgres(# name VARCHAR(100)
postgres(# );
CREATE TABLE
postgres=#
postgres=# CREATE TABLE student_phones (
postgres(# student_id INT,
postgres(# phone_number VARCHAR(15),
postgres(# phone_type VARCHAR(20), -- 'mobile', 'home', etc.
postgres(# PRIMARY KEY (student_id, phone_number),
postgres(# FOREIGN KEY (student_id) REFERENCES students(student_id)
postgres(# );
CREATE TABLE
postgres=# CREATE TABLE courses (
postgres(# course_id INT PRIMARY KEY,
postgres(# course_name VARCHAR(100),
postgres(# credits INT
postgres(# );
CREATE TABLE
postgres=# CREATE TABLE enrollments (
postgres(# student_id INT,
postgres(# course_id INT,
postgres(# grade CHAR(2),
postgres(# PRIMARY KEY (student_id, course_id),
postgres(# FOREIGN KEY (student_id) REFERENCES students(student_id),
postgres(# FOREIGN KEY (course_id) REFERENCES courses(course_id)
postgres(# );
CREATE TABLE              ^
postgres=# CREATE TABLE departments (
postgres(# department_id INT PRIMARY KEY,
postgres(# department_name VARCHAR(100),
postgres(# department_head VARCHAR(100)
postgres(# );
CREATE TABLE
postgres=# CREATE TABLE students_n (
postgres(# student_id INT PRIMARY KEY,
postgres(# name VARCHAR(100),
postgres(# department_id INT,
postgres(# FOREIGN KEY (department_id) REFERENCES departments(department_id)
postgres(# );
CREATE TABLE
postgres=# CREATE TABLE authors (
postgres(# author_id SERIAL PRIMARY KEY,
postgres(# first_name VARCHAR(50) NOT NULL,
postgres(# last_name VARCHAR(50) NOT NULL,
postgres(# birth_date DATE
postgres(# );
CREATE TABLE
postgres=# CREATE TABLE books (
postgres(# book_id SERIAL PRIMARY KEY,
postgres(# title VARCHAR(200) NOT NULL,
postgres(# isbn VARCHAR(13) UNIQUE,
postgres(# publication_year INTEGER,
postgres(# available_copies INTEGER DEFAULT 1
postgres(# );
CREATE TABLE
postgres=# CREATE TABLE book_authors (
postgres(# book_id INTEGER,
postgres(# author_id INTEGER,
postgres(# PRIMARY KEY (book_id, author_id),
postgres(# FOREIGN KEY (book_id) REFERENCES books(book_id),
postgres(# FOREIGN KEY (author_id) REFERENCES authors(author_id)
postgres(# );
CREATE TABLE
postgres=# CREATE TABLE members (
postgres(# member_id SERIAL PRIMARY KEY,
postgres(# first_name VARCHAR(50) NOT NULL,
postgres(# last_name VARCHAR(50) NOT NULL,
postgres(# email VARCHAR(100) UNIQUE NOT NULL,
postgres(# phone VARCHAR(15),
postgres(# membership_date DATE DEFAULT CURRENT_DATE
postgres(# );
CREATE TABLE
postgres=# CREATE TABLE loans (
postgres(# loan_id SERIAL PRIMARY KEY,
postgres(# member_id INTEGER NOT NULL,
postgres(# book_id INTEGER NOT NULL,
postgres(# loan_date DATE DEFAULT CURRENT_DATE,
postgres(# due_date DATE NOT NULL,
postgres(# return_date DATE,
postgres(# late_fee DECIMAL(10,2) DEFAULT 0.00,
postgres(# FOREIGN KEY (member_id) REFERENCES members(member_id),
postgres(# FOREIGN KEY (book_id) REFERENCES books(book_id)
postgres(# );
CREATE TABLE
postgres=#